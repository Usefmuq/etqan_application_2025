// onboardings_page_view_model.dart
import 'package:etqan_application_2025/src/features/onboarding/domain/entities/onboardings_page_view.dart';

class OnboardingsPageViewModel extends OnboardingsPageView {
  OnboardingsPageViewModel({
    required super.onboardingId,
    required super.firstNameEn,
    required super.lastNameEn,
    super.firstNameAr,
    super.lastNameAr,
    required super.email,
    super.phone,
    super.departmentId,
    super.departmentNameEn,
    super.departmentNameAr,
    super.positionId,
    super.positionNameEn,
    super.positionNameAr,
    super.reportTo,
    super.reportToNameEn,
    super.reportToNameAr,
    required super.startDate,
    super.notes,
    super.statusId,
    super.statusKey,
    super.statusEn,
    super.statusAr,
    super.createdBy,
    super.createdByNameEn,
    super.createdByNameAr,
    super.createdAt,
    super.updatedAt,
    required super.isActive,
    super.requestId,
    super.requestStatusId,
    super.requestStatusKey,
    super.requestStatusEn,
    super.requestStatusAr,
    super.numberOfManagerApprovalsNeeded,
    super.numberOfApprovalsNeeded,
    required super.numberOfApprovalsDone,
    required super.numberOfApprovalsPending,
  });

  factory OnboardingsPageViewModel.fromJson(Map<String, dynamic> json) {
    return OnboardingsPageViewModel(
      onboardingId: json['onboarding_id'],
      firstNameEn: json['first_name_en'],
      lastNameEn: json['last_name_en'],
      firstNameAr: json['first_name_ar'],
      lastNameAr: json['last_name_ar'],
      email: json['email'],
      phone: json['phone'],
      departmentId: json['department_id'],
      departmentNameEn: json['department_name_en'],
      departmentNameAr: json['department_name_ar'],
      positionId: json['position_id'],
      positionNameEn: json['position_name_en'],
      positionNameAr: json['position_name_ar'],
      reportTo: json['report_to'],
      reportToNameEn: json['report_to_name_en'],
      reportToNameAr: json['report_to_name_ar'],
      startDate: DateTime.parse(json['start_date']),
      notes: json['notes'],
      statusId: json['status_id'],
      statusKey: json['status_key'],
      statusEn: json['status_en'],
      statusAr: json['status_ar'],
      createdBy: json['created_by'],
      createdByNameEn: json['created_by_name_en'],
      createdByNameAr: json['created_by_name_ar'],
      createdAt: json['created_at'] != null
          ? DateTime.parse(json['created_at'])
          : null,
      updatedAt: json['updated_at'] != null
          ? DateTime.parse(json['updated_at'])
          : null,
      isActive: json['is_active'] ?? true,
      requestId: json['request_id'],
      requestStatusId: json['request_status_id'],
      requestStatusKey: json['request_status_key'],
      requestStatusEn: json['request_status_en'],
      requestStatusAr: json['request_status_ar'],
      numberOfManagerApprovalsNeeded:
          json['number_of_manager_approvals_needed'],
      numberOfApprovalsNeeded: json['number_of_approvals_needed'],
      numberOfApprovalsDone: json['number_of_approvals_done'] ?? 0,
      numberOfApprovalsPending: json['number_of_approvals_pending'] ?? 0,
    );
  }

  Map<String, dynamic> toJson() {
    return {
      'onboarding_id': onboardingId,
      'first_name_en': firstNameEn,
      'last_name_en': lastNameEn,
      'first_name_ar': firstNameAr,
      'last_name_ar': lastNameAr,
      'email': email,
      'phone': phone,
      'department_id': departmentId,
      'department_name_en': departmentNameEn,
      'department_name_ar': departmentNameAr,
      'position_id': positionId,
      'position_name_en': positionNameEn,
      'position_name_ar': positionNameAr,
      'report_to': reportTo,
      'report_to_name_en': reportToNameEn,
      'report_to_name_ar': reportToNameAr,
      'start_date': startDate.toIso8601String(),
      'notes': notes,
      'status_id': statusId,
      'status_key': statusKey,
      'status_en': statusEn,
      'status_ar': statusAr,
      'created_by': createdBy,
      'created_by_name_en': createdByNameEn,
      'created_by_name_ar': createdByNameAr,
      'created_at': createdAt?.toIso8601String(),
      'updated_at': updatedAt?.toIso8601String(),
      'is_active': isActive,
      'request_id': requestId,
      'request_status_id': requestStatusId,
      'request_status_key': requestStatusKey,
      'request_status_en': requestStatusEn,
      'request_status_ar': requestStatusAr,
      'number_of_manager_approvals_needed': numberOfManagerApprovalsNeeded,
      'number_of_approvals_needed': numberOfApprovalsNeeded,
      'number_of_approvals_done': numberOfApprovalsDone,
      'number_of_approvals_pending': numberOfApprovalsPending,
    };
  }

  OnboardingsPageView toEntity() {
    return OnboardingsPageView(
      onboardingId: onboardingId,
      firstNameEn: firstNameEn,
      lastNameEn: lastNameEn,
      firstNameAr: firstNameAr,
      lastNameAr: lastNameAr,
      email: email,
      phone: phone,
      departmentId: departmentId,
      departmentNameEn: departmentNameEn,
      departmentNameAr: departmentNameAr,
      positionId: positionId,
      positionNameEn: positionNameEn,
      positionNameAr: positionNameAr,
      reportTo: reportTo,
      reportToNameEn: reportToNameEn,
      reportToNameAr: reportToNameAr,
      startDate: startDate,
      notes: notes,
      statusId: statusId,
      statusKey: statusKey,
      statusEn: statusEn,
      statusAr: statusAr,
      createdBy: createdBy,
      createdByNameEn: createdByNameEn,
      createdByNameAr: createdByNameAr,
      createdAt: createdAt,
      updatedAt: updatedAt,
      isActive: isActive,
      requestId: requestId,
      requestStatusId: requestStatusId,
      requestStatusKey: requestStatusKey,
      requestStatusEn: requestStatusEn,
      requestStatusAr: requestStatusAr,
      numberOfManagerApprovalsNeeded: numberOfManagerApprovalsNeeded,
      numberOfApprovalsNeeded: numberOfApprovalsNeeded,
      numberOfApprovalsDone: numberOfApprovalsDone,
      numberOfApprovalsPending: numberOfApprovalsPending,
    );
  }

  // Method to convert important columns to a Map for table display
  Map<String, dynamic> toTableRow() {
    return {
      'Full Name': '$firstNameEn $lastNameEn',
      'Department': departmentNameEn ?? 'N/A',
      'Position': positionNameEn ?? 'N/A',
      'Manager': reportToNameEn ?? 'N/A',
      'Start Date': startDate.toLocal().toString(),
      'Status': statusEn ?? 'N/A',
      'Created By': createdByNameEn ?? 'N/A',
      'Active Status': isActive ? 'Active' : 'Inactive',
    };
  }

  OnboardingsPageViewModel copyWith({
    int? onboardingId,
    String? firstNameEn,
    String? lastNameEn,
    String? firstNameAr,
    String? lastNameAr,
    String? email,
    String? phone,
    String? departmentId,
    String? departmentNameEn,
    String? departmentNameAr,
    String? positionId,
    String? positionNameEn,
    String? positionNameAr,
    String? reportTo,
    String? reportToNameEn,
    String? reportToNameAr,
    DateTime? startDate,
    String? notes,
    String? statusId,
    String? statusKey,
    String? statusEn,
    String? statusAr,
    String? createdBy,
    String? createdByNameEn,
    String? createdByNameAr,
    DateTime? createdAt,
    DateTime? updatedAt,
    bool? isActive,
    int? requestId,
    String? requestStatusId,
    String? requestStatusKey,
    String? requestStatusEn,
    String? requestStatusAr,
    int? numberOfManagerApprovalsNeeded,
    int? numberOfApprovalsNeeded,
    int? numberOfApprovalsDone,
    int? numberOfApprovalsPending,
  }) {
    return OnboardingsPageViewModel(
      onboardingId: onboardingId ?? this.onboardingId,
      firstNameEn: firstNameEn ?? this.firstNameEn,
      lastNameEn: lastNameEn ?? this.lastNameEn,
      firstNameAr: firstNameAr ?? this.firstNameAr,
      lastNameAr: lastNameAr ?? this.lastNameAr,
      email: email ?? this.email,
      phone: phone ?? this.phone,
      departmentId: departmentId ?? this.departmentId,
      departmentNameEn: departmentNameEn ?? this.departmentNameEn,
      departmentNameAr: departmentNameAr ?? this.departmentNameAr,
      positionId: positionId ?? this.positionId,
      positionNameEn: positionNameEn ?? this.positionNameEn,
      positionNameAr: positionNameAr ?? this.positionNameAr,
      reportTo: reportTo ?? this.reportTo,
      reportToNameEn: reportToNameEn ?? this.reportToNameEn,
      reportToNameAr: reportToNameAr ?? this.reportToNameAr,
      startDate: startDate ?? this.startDate,
      notes: notes ?? this.notes,
      statusId: statusId ?? this.statusId,
      statusKey: statusKey ?? this.statusKey,
      statusEn: statusEn ?? this.statusEn,
      statusAr: statusAr ?? this.statusAr,
      createdBy: createdBy ?? this.createdBy,
      createdByNameEn: createdByNameEn ?? this.createdByNameEn,
      createdByNameAr: createdByNameAr ?? this.createdByNameAr,
      createdAt: createdAt ?? this.createdAt,
      updatedAt: updatedAt ?? this.updatedAt,
      isActive: isActive ?? this.isActive,
      requestId: requestId ?? this.requestId,
      requestStatusId: requestStatusId ?? this.requestStatusId,
      requestStatusKey: requestStatusKey ?? this.requestStatusKey,
      requestStatusEn: requestStatusEn ?? this.requestStatusEn,
      requestStatusAr: requestStatusAr ?? this.requestStatusAr,
      numberOfManagerApprovalsNeeded:
          numberOfManagerApprovalsNeeded ?? this.numberOfManagerApprovalsNeeded,
      numberOfApprovalsNeeded:
          numberOfApprovalsNeeded ?? this.numberOfApprovalsNeeded,
      numberOfApprovalsDone:
          numberOfApprovalsDone ?? this.numberOfApprovalsDone,
      numberOfApprovalsPending:
          numberOfApprovalsPending ?? this.numberOfApprovalsPending,
    );
  }
}
